<?xml version="1.0" encoding="UTF-8"?>
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop"   
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop  
     http://www.springframework.org/schema/aop/spring-aop.xsd 
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx.xsd">  
	
	<!-- 启动服务器，自动加载配置文件，将自动创建表 -->
	
	<!-- 引入外部的属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 配置c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>	
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 配置Hibernate的相关属性 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- 配置Hibernate的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.fromat_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>			
			</props>
		</property>
		
		<!-- 加载Hibernate的映射文件 -->
		<property name="mappingResources">
			<list>
				<value>cn/gdedu/ssh/domain/Product.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置Action的类,其中scope是指action中的productService变量是多例模式 -->
	<bean id="productAction" class="cn.gdedu.ssh.action.ProductAction" scope="prototype">
		<property name="productService" ref="productService"></property>
	</bean>
	
	<!-- 配置业务层的类 -->
	<bean id="productService" class="cn.gdedu.ssh.service.ProductService">			
		<!-- 注入DAO的类 -->
		<property name="productDao" ref="productDao"/>
	</bean>
	
	<!-- 配置DAO的类 -->
	<bean id="productDao" class="cn.gdedu.ssh.dao.ProductDao">
		<!-- 注入HibernateDaoSupport模板，只需要注入sessionFactory，然后通过getHibernateTemplate方法即可 -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 开启注解事务，在Service类上面写上transational注解，注意导对包即可 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>